{{ 'section-image-banner.css' | asset_url | stylesheet_tag }}
{{ 'section-contact-form.css' | asset_url | stylesheet_tag }}

{%- if section.settings.image_height == 'adapt' and section.settings.image != blank -%}
  {%- style -%}
    @media screen and (max-width: 749px) {
      #Banner-{{ section.id }}::before,
      #Banner-{{ section.id }}.banner__media::before,
      #Banner-{{ section.id }}:not(.banner--mobile-bottom) .banner__content::before {
        padding-bottom: {{ 1 | divided_by: section.settings.image.aspect_ratio | times: 100 }}%;
        content: '';
        display: block;
      }
    }

    @media screen and (min-width: 750px) {
      #Banner-{{ section.id }}::before
      , #Banner-{{ section.id }}
      .banner__media::before {
        padding-bottom: {{ 1 | divided_by: section.settings.image.aspect_ratio | times: 100 }}%;
        content: '';
        display: block;
      }
    }
  {%- endstyle -%}
{%- endif -%}

{%- style -%}
  #Banner-{{ section.id }}::after {
    opacity: {{ section.settings.image_overlay_opacity | divided_by: 100.0 }};
  }
{%- endstyle -%}
{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}
{%- liquid
  assign full_width = '100vw'
  assign widths = '375, 550, 750, 1100, 1500, 1780, 2000, 3000, 3840'

  if section.settings.image_behavior == 'ambient'
    assign half_width = '60vw'
    assign full_width = '120vw'
    assign stacked_sizes = '(min-width: 750px) 60vw, 120vw'
    assign widths = '450, 660, 900, 1320, 1800, 2136, 2400, 3600, 7680'
  elsif section.settings.image_behavior == 'fixed' or section.settings.image_behavior == 'zoom-in'
    assign half_width = '100vw'
    assign stacked_sizes = '100vw'
  else
    assign half_width = '50vw'
    assign stacked_sizes = '(min-width: 750px) 50vw, 100vw'
  endif
  assign fetch_priority = 'auto'
  if section.index == 1
    assign fetch_priority = 'high'
  endif
-%}


<div id="Banner-{{ section.id }}" class="section-{{ section.id }}-padding contact-form banner banner--content-align-{{ section.settings.desktop_content_alignment }} banner--content-align-mobile-{{ section.settings.mobile_content_alignment }} banner--{{ section.settings.image_height }}{% if section.settings.stack_images_on_mobile and section.settings.image != blank and section.settings.image_2 != blank %} banner--stacked{% endif %}{% if section.settings.image_height == 'adapt' and section.settings.image != blank %} banner--adapt{% endif %}{% if section.settings.show_text_below %} banner--mobile-bottom{% endif %} banner--desktop-transparent {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}">
  {%- if section.settings.image != blank -%}
    <div class="banner__media media{% if section.settings.image == blank and section.settings.image_2 == blank %} placeholder{% endif %}{% if section.settings.image_2 != blank %} banner__media-half{% endif %}{% if section.settings.image_behavior != 'none' %} animate--{{ section.settings.image_behavior }}{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}">
      {%- liquid
        assign image_height = section.settings.image.width | divided_by: section.settings.image.aspect_ratio
        if section.settings.image_2 != blank
          assign image_class = 'banner__media-image-half'
        endif
        if section.settings.image_2 != blank and section.settings.stack_images_on_mobile
          assign sizes = stacked_sizes
        elsif section.settings.image_2 != blank
          assign sizes = half_width
        else
          assign sizes = full_width
        endif
      -%}
      {{
        section.settings.image | image_url: width: 3840 | image_tag: width: section.settings.image.width, height: image_height, class: image_class, sizes: sizes, widths: widths, fetchpriority: fetch_priority
      }}
    </div>
  {%- elsif section.settings.image_2 == blank -%}
    <div class="banner__media media{% if section.settings.image == blank and section.settings.image_2 == blank %} placeholder{% endif %}{% if section.settings.image_2 != blank %} banner__media-half{% endif %}{% if section.settings.image_behavior != 'none' %} animate--{{ section.settings.image_behavior }}{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}">
      {{ 'hero-apparel-1' | placeholder_svg_tag: 'placeholder-svg' }}
    </div>
  {%- endif -%}
  {%- if section.settings.image_2 != blank -%}
    <div class="banner__media media{% if section.settings.image != blank %} banner__media-half{% endif %}{% if section.settings.image_behavior != 'none' %} animate--{{ section.settings.image_behavior }}{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}">
      {%- liquid
        assign image_height_2 = section.settings.image_2.width | divided_by: section.settings.image_2.aspect_ratio
        if section.settings.image != blank
          assign image_class_2 = 'banner__media-image-half'
        endif
        if section.settings.image != blank and section.settings.stack_images_on_mobile
          assign sizes = stacked_sizes
        elsif section.settings.image_2 != blank
          assign sizes = half_width
        else
          assign sizes = full_width
        endif
      -%}
      {{
        section.settings.image_2 | image_url: width: 3840 | image_tag: width: section.settings.image_2.width, height: image_height_2, class: image_class_2, sizes: sizes, widths: widths, fetchpriority: fetch_priority
      }}
    </div>
  {%- endif -%}
  <div class="banner__content contact-form__content banner__content--middle-center page-width{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
    <div class="banner__box content-container content-container--full-width-mobile color-{{ section.settings.color_scheme }} gradient">
      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when 'contact_form' -%}
            <div class="contact-form-swiper__wrapper ">
        {%- liquid
          assign contact_form_class = 'isolate contact-form--form'
          if settings.animations_reveal_on_scroll
            assign contact_form_class = 'isolate scroll-trigger animate--slide-in contact-form--form'
          endif
        -%}
        <h2 class="banner__heading inline-richtext hxl">
          {{ 'templates.contact.form.title' | t }}
            </h2>
        {%- form 'contact'
          , id: 'ContactForm'
          , class: contact_form_class -%}
          {%- if form.posted_successfully? -%}
            <h2
              class="form-status form-status-list form__message"
              tabindex="-1"
              autofocus>
              {{- 'icon-success.svg' | inline_asset_content -}}
              {{ 'templates.contact.form.post_success' | t }}
            </h2>
          {%- elsif form.errors -%}
            <div class="form__message">
              <h2
                class="form-status caption-large text-body"
                role="alert"
                tabindex="-1"
                autofocus>
                {{- 'icon-error.svg' | inline_asset_content -}}
                {{ 'templates.contact.form.error_heading' | t }}
              </h2>
            </div>
            <ul class="form-status-list caption-large" role="list">
              <li>
                <a href="#ContactForm-email" class="link">
                  {{ form.errors.translated_fields.email | capitalize }}
                  {{ form.errors.messages.email }}
                </a>
              </li>
            </ul>
          {%- endif -%}
          <div class="field">
            <input
              class="field__input"
              autocomplete="name"
              type="text"
              id="ContactForm-name"
              name="contact[{{ 'templates.contact.form.name' | t }}]"
              value="{% if form.name %}{{ form.name }}{% elsif customer %}{{ customer.name }}{% endif %}"
              placeholder="{{ 'templates.contact.form.name' | t }}">
            <label class="field__label" for="ContactForm-name">{{ 'templates.contact.form.name' | t }}</label>
          </div>
          <div class="field field--with-error">
            <input
              autocomplete="email"
              type="email"
              id="ContactForm-email"
              class="field__input"
              name="contact[email]"
              spellcheck="false"
              autocapitalize="off"
              value="{% if form.email %}{{ form.email }}{% elsif customer %}{{ customer.email }}{% endif %}"
              aria-required="true"
              {% if form.errors contains 'email' %}
              aria-invalid="true"
              aria-describedby="ContactForm-email-error"
              {% endif %}
              placeholder="{{ 'templates.contact.form.email' | t }}">
            <label class="field__label" for="ContactForm-email">
              {{- 'templates.contact.form.email' | t }}
              <span aria-hidden="true">*</span>
            </label>
            {%- if form.errors contains 'email' -%}
              <small class="contact__field-error" id="ContactForm-email-error">
                <span class="visually-hidden">{{ 'accessibility.error' | t }}</span>
                <span class="form__message">
                  <span class="svg-wrapper">
                    {{- 'icon-error.svg' | inline_asset_content -}}
                  </span>
                  {{- form.errors.translated_fields.email | capitalize }}
                  {{ form.errors.messages.email -}}
                </span>
              </small>
            {%- endif -%}
          </div>
         
          <div class="field">
            <input
              type="tel"
              id="ContactForm-phone"
              class="field__input"
              autocomplete="tel"
              name="contact[{{ 'templates.contact.form.phone' | t }}]"
              pattern="[0-9\-]*"
              value="{% if form.phone %}{{ form.phone }}{% elsif customer %}{{ customer.phone }}{% endif %}"
              placeholder="{{ 'templates.contact.form.phone' | t }}">
            <label class="field__label" for="ContactForm-phone">{{ 'templates.contact.form.phone' | t }}</label>
          </div>
          <div class="field">
            <textarea
              rows="10"
              id="ContactForm-body"
              class="text-area field__input"
              name="contact[{{ 'templates.contact.form.comment' | t }}]"
              placeholder="{{ 'templates.contact.form.comment' | t }}">
              {{- form.body -}}
            </textarea>
            <label class="form__label field__label" for="ContactForm-body">
              {{- 'templates.contact.form.comment' | t -}}
            </label>
          </div>
          <div class="contact__button">
            <button type="submit" class="button button--primary">
              {{ 'templates.contact.form.send' | t }}
            </button>
          </div>
        {%- endform -%}
      </div>
        
          {%- when 'image' -%}
            <div class="contact-form__image">
           <img src="{{ block.settings.image |  image_url: width:  1200 }}" width="auto" height="auto" alt="">
            </div>
        {%- endcase -%}
      {%- endfor -%}
     
    </div>
  </div>
</div>


{% schema %}
  {
    "name": "t:sections.contact-form.name",
    "tag": "section",
    "class": "section",
    "disabled_on": {
      "groups": ["header", "footer"]
    },
    "settings": [
      {
        "type": "image_picker",
        "id": "image",
        "label": "t:sections.image-banner.settings.image.label"
      },
      {
        "type": "image_picker",
        "id": "image_2",
        "label": "t:sections.image-banner.settings.image_2.label"
      },
      {
        "type": "range",
        "id": "image_overlay_opacity",
        "min": 0,
        "max": 100,
        "step": 10,
        "unit": "%",
        "label": "t:sections.image-banner.settings.image_overlay_opacity.label",
        "default": 0
      },
      {
        "type": "select",
        "id": "image_height",
        "options": [
          {
            "value": "adapt",
            "label": "t:sections.image-banner.settings.image_height.options__1.label"
          }, {
            "value": "small",
            "label": "t:sections.image-banner.settings.image_height.options__2.label"
          }, {
            "value": "medium",
            "label": "t:sections.image-banner.settings.image_height.options__3.label"
          }, {
            "value": "large",
            "label": "t:sections.image-banner.settings.image_height.options__4.label"
          }
        ],
        "default": "medium",
        "label": "t:sections.image-banner.settings.image_height.label",
        "info": "t:sections.image-banner.settings.image_height.info"
      }, {
        "type": "color_scheme",
        "id": "color_scheme",
        "label": "t:sections.all.colors.label",
        "default": "scheme-1"
      }, {
        "type": "header",
        "content": "t:sections.all.animation.content"
      }, {
        "type": "select",
        "id": "image_behavior",
        "options": [
          {
            "value": "none",
            "label": "t:sections.all.animation.image_behavior.options__1.label"
          }, {
            "value": "ambient",
            "label": "t:sections.all.animation.image_behavior.options__2.label"
          }, {
            "value": "fixed",
            "label": "t:sections.all.animation.image_behavior.options__3.label"
          }, {
            "value": "zoom-in",
            "label": "t:sections.all.animation.image_behavior.options__4.label"
          }
        ],
        "default": "none",
        "label": "t:sections.all.animation.image_behavior.label"
      }, {
        "type": "header",
        "content": "t:sections.all.padding.section_padding_heading"
      }, {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_top",
        "default": 36
      }, {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_bottom",
        "default": 36
      }
    ],
    "blocks": [
      {
      "type": "contact_form",
      "name": "Content Form",
      "limit": 1,
    },
    {
      "type": "image",
      "name": "Image",
      "limit": 1,
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        }
      ]
    }
    ],
    "presets": [
      {
        "name": "t:sections.contact-form.presets.name"
      }
    ]
  }
{% endschema %}